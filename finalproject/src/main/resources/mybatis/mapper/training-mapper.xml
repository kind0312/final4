<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="training">
  
   	<!-- 단일 조회 구문
 			- resultType은 select에만 존재(select전용 구문), 가져와서 무언갈 보여줘야 하니까 			
 	 -->
 	 
 	<select id="trainingRequestList" parameterType="int"  resultType="TrainingDto">
 		select A.* from training A inner join linked_list B on A.training_no = B.training_no inner join trainer C on C.trainer_no = B.trainer_no where C.trainer_no = #{trainerNo}
 	</select>
 	
 	<!-- 예약상태 > 예약취소로 변경 -->
 	<update id="statusChange" parameterType="int">
 		update training set training_status='예약취소' where training_no=#{trainingNo}
 	</update>
 	
 	<!-- 훈련서비스 번호로 1건의 예약내역 조회 -->
 	<select id="selectone" resultType="TrainingDto" parameterType="int">
 		select * from training where training_no=#{trainingNo}
 	</select>
 	
 	<!-- 훈련서비스 번호로 서비스, 서비스상세, 서비스 연결테이블 3개 조인 리스트 -->
 	<select id="oneTraining" resultType="OneTrainingVO" parameterType="int">
 		select t.*, td.training_detail_pet_name, li.trainer_no from training t 
		  inner join training_detail td on t.training_no=td.training_no
		  inner join linked_list li on td.training_no=li.training_no
		  where t.training_no=#{trainingNo}
 	</select>
 	
 	<!-- 진행 예약 리스트(회원 기준) -->
 	<select id="ingList" resultType="TrainingListVO" parameterType="String">
 		select img.files_no, pro.trainer_no, li.training_no, 
			t.training_date, t.training_starttime, t.training_status, t.member_id
			from member_img img 
			inner join trainer pro on img.member_id=pro.member_id
			inner join linked_list li on pro.trainer_no=li.trainer_no
			inner join training t on li.training_no=t.training_no
			where member_id=#{memberId} 
 			and (t.training_status='예약대기' or t.training_status='예약확정')
 			order by t.training_date desc
 	</select>
 	
 	<!-- 지난 예약 리스트(회원 기준) -->
 	<select id="endList" resultType="TrainingListVO" parameterType="String">
 		select img.files_no, pro.trainer_no, li.training_no, 
			t.training_date, t.training_starttime, t.training_status, t.member_id
			from member_img img 
			inner join trainer pro on img.member_id=pro.member_id
			inner join linked_list li on pro.trainer_no=li.trainer_no
			inner join training t on li.training_no=t.training_no
			where member_id=#{memberId} 
 			and (t.training_status='예약취소' or t.training_status='이용완료')
 			order by t.training_date desc
 	</select>

 	<!-- 진행 예약 리스트(훈련사 기준) -->
 	<select id="reservationIngList" resultType="ReservationListVO" parameterType="int">
 		select m.member_name, t.*, li.trainer_no from member m 
		inner join training t on m.member_id=t.member_id
		inner join linked_list li on t.training_no=li.training_no
		where li.trainer_no=#{trainerNo} and t.training_status='예약확정'
 	</select>
 	
 	<!-- 지난 예약 리스트(훈련사 기준) -->
 	<select id="reservationEndList" resultType="ReservationListVO" parameterType="int">
 		select m.member_name, t.*, li.trainer_no, p.training_purchase_price from member m 
		inner join training t on m.member_id=t.member_id
		inner join linked_list li on t.training_no=li.training_no
		inner join training_purchase p on li.training_no = p.training_no 
		where li.trainer_no=#{trainerNo} and t.training_status='이용완료'
 	</select>
 	
 	<!-- 예약상세 리스트(훈련사 기준) -->
 	<select id="reservationDetailList" resultType="ReservationDetailListVO" parameterType="int">
 		select m.member_name,t.*, tp.training_purchase_price, 
		td.training_detail_pet_name, p.*, img.files_no 
		from member m 
			inner join training t on m.member_id = t.member_id 
			inner join training_purchase tp on t.training_no = tp.training_no
			inner join training_detail td on tp.training_no = td.training_no
			inner join pet p on td.training_detail_pet_name = p.pet_name
			inner join pet_img img on p.pet_no = img.pet_no
		where t.training_no=#{trainingNo}
 	</select>
 	
 	<!-- 스케쥴 예약내역 리스트 -->
 	<select id="scheduleList" resultType="ReservationListVO" parameterType="ScheduleVO">
 		select m.member_name, t.*, li.trainer_no from member m 
		inner join training t on m.member_id=t.member_id
		inner join linked_list li on t.training_no=li.training_no
		where li.trainer_no=#{trainerNo} 
        and t.training_date=#{trainingDate}
		and (t.training_status='예약확정' or t.training_status='이용완료')
 	</select>
 	
 	<!-- 스케줄 데이터 리스트(화면에 미리 찍어줄 데이터) -->
 	<select id="schedule" resultType="CalendarVO" parameterType="int">
 		select t.training_date, t. training_no, 
 		t.training_status, li.trainer_no from training t 
		inner join linked_list li on t.training_no=li.training_no
		where li.trainer_no=#{trainerNo}
		and (t.training_status='예약확정' or t.training_status='이용완료')
 	</select>
 	
 	
 	<!-- 훈련서비스 받은 펫 마리수 -->
  	<select id="petCount" resultType="int" parameterType="int">
  		select count(*) from training_detail where training_no=#{trainingNo}
  	</select>
  	
  	<!-- 훈련서비스 받은 펫 번호 조회 -->
  	<select id="petList" resultType="TrainingDetailDto" parameterType="int">
  		select * from training_detail where training_no=#{trainingNo}
  	</select>
  	
  	<insert id="insert" parameterType="TrainingDto">
  insert into training(
  training_no,
   member_id,
    training_date,
  training_starttime,
  training_basic_address,
  training_detail_address,
  training_memo,
  training_status,
  training_changedate)
   values(
  #{trainingNo},
  #{memberId},
  #{trainingDate},
  #{trainingStartTime},
  #{trainingBasicAddress},
  #{trainingDetailAddress},
  #{trainingMemo},
  '예약대기',
   sysdate)

  </insert>
  
  <select id="sequence" resultType="int">
   select training_seq.nextval from dual
  </select>
  
  <insert id="detailInsert" parameterType="TrainingDetailDto">
  insert into training_detail(training_no, training_detail_pet_name)
   values(#{trainingNo}, #{trainingDetailPetName})
  </insert>
  	
  	<!-- 훈련서비스 삭제 -->
  	<delete id="delete" parameterType="int">
  		delete training where training_no=#{trainingNo}
  	</delete>
  	
  	<!-- 예약상태 > 예약확정 변경 -->
 	<update id="statusChange2" parameterType="int">
 		update training set training_status='예약확정', training_changedate=sysdate where training_no=#{trainingNo}
 	</update>
 	
 	<!-- 예약상태 > 이용완료 변경 -->
 	<update id="statusChange3" parameterType="int">
 		update training set training_status='이용완료', training_changedate=sysdate where training_no=#{trainingNo}
 	</update>
 	
 	<!-- request detail 펫 정보 -->
 	<select id="requestDetailPetList" parameterType="int" resultType="PetDetailListVO">
 		select p.*, img.files_no from training t 
		inner join training_detail td on t.training_no=td.training_no
		inner join pet p on td.training_detail_pet_name=p.pet_name
		inner join pet_img img on p.pet_no = img.pet_no
		inner join linked_list list on td.training_no=list.training_no where training_no=#{trainingNo}
 	</select>
 	
 	<!-- request list 훈련요청리스트(훈련사) -->
 	<select id="requestList" parameterType="int" resultType="TrainingRequestListVO">
 	select * 
	from
	(
	select t.training_no,t.member_id,t.training_date,t.training_starttime,t.training_basic_address,p.pet_no,p.pet_name,img.files_no
	 ,ROW_NUMBER() OVER (PARTITION BY t.training_no ORDER BY p.pet_no) AS emp_no 
	from training t 
	inner join training_detail td on t.training_no=td.training_no
	inner join pet p on td.training_detail_pet_name=p.pet_name
	inner join pet_img img on p.pet_no = img.pet_no
	inner join linked_list list on td.training_no=list.training_no where trainer_no=#{trainerNo} and t.training_status='예약대기'
	)
	WHERE emp_no = 1
 	</select>
 	
 	
 	<!-- 훈련요청 날짜에 확정된 예약이 있는지 확인 -->
 	<select id="checkRequest" parameterType="CheckRequestVO" resultType="TrainingDto">
		select tr.* from training tr
		inner join linked_list LL on tr.training_no = LL.training_no
		inner join trainer tt on tt.trainer_no = LL.trainer_no
		where tr.training_status='예약확정' and tr.training_date=#{trainingDate} and tt.trainer_no = #{trainerNo}
 	</select>
 	
 	<insert id="pointInsert" parameterType="PointDto">
 		insert into point(point_no, member_id, point_status, point_price, point_date)
 		values(point_seq.nextval, #{memberId}, '사용', #{pointPrice}, sysdate)
 	</insert>
 	
 	<insert id="linkedInsert" parameterType="LinkedListDto">
 	insert into linked_list(training_no, trainer_no) values(#{trainingNo}, #{trainerNo})
 	</insert>
 	
 	<!-- 훈련 이용 내역 목록 -->
 	<select id="traingUsage" resultType="trainingUsageVO" parameterType="string">
 		select m.member_name, pro.trainer_no, li.training_no, 
         t.training_date, t.training_starttime, t.training_status 
         from member m 
         inner join trainer pro on m.member_id=pro.member_id
         inner join linked_list li on pro.trainer_no=li.trainer_no
         inner join training t on li.training_no=t.training_no
         where member_id=#{memberId}
         
    </select>
    
    
    <!-- 관리자/훈련 이용내역 상세 pet+사진 -->
   
    <select id="oneDetail"  resultType="ReservationDetailListVO" parameterType="int">    
         select m.member_name,t.*, tp.training_purchase_price, 
		td.training_detail_pet_name, p.*, img.files_no 
		from member m 
			inner join training t on m.member_id = t.member_id 
			inner join training_purchase tp on t.training_no = tp.training_no
            inner join training_detail td on tp.training_no = td.training_no
			inner join pet p on td.training_detail_pet_name = p.pet_name
			inner join pet_img img on p.pet_no = img.pet_no
		    where t.training_no=#{trainingNo}
		    
    </select>
     <!-- 관리자/훈련 이용내역 상세 -->
    <select id="oneDetail2"  resultType="trainingMemberVO" parameterType="int">    
    select m.member_name,t.training_no,t.training_date,t.training_status, tp.training_purchase_price
    from trainer tr
    inner join member m on m.member_id=tr.member_id
    inner join linked_list li on li.trainer_no=tr.trainer_no
    inner join training t on t.training_no=li.training_no
    inner join training_purchase tp on t.training_no=tp.training_no
     where t.training_no=#{trainingNo}
		    
    </select>
    
  </mapper>
 